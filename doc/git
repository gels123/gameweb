将当前目录变为git管理仓库：git init

查看当前仓库状态：git status

查看修改内容：git diff <file>

提交工作区：git add <file>

提交暂存区：git commit -m "描述信息"

查看提交历史：git log (--pretty=oneline) (--graph)

查看历史命令：git reflog

回退版本：git reset --hard <commit_id>

获取指定文件的最新版本：git checkout -- <file>

撤销暂存区到工作区：git reset HEAD <file>

删除文件：git rm file

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name> （-D强制删除）

解决冲突：git merge (--no-ff -m "描述信息") <branch>

储存当前工作现场：git stash

查看工作现场：git stash list

应用某个工作现场：git stash apply stash@{0}

删除工作现场：git stash drop

新建一个标签：git tag -a <tagname> -m "描述信息" <commit_id>

查看所有标签：git tag

查询标签信息：git show <tagname>

删除标签：git tag -d <tagname>

放弃本地所有修改： git checkout .


#远端操作
从远端获取git仓库：git clone <git@github.com:you285168/pythonweb.git>

关联一个远程库：git remote add origin git@github.com:you285168/pythonweb.git

推送分支：git push (-u) origin <branch>

查看远程库：git remote -v

在本地创建和远程分支对应的分支：git checkout -b <branch> origin/<branch>

建立本地分支和远程分支的关联：git branch --set-upstream branch-name origin/branch-name

从远程抓取分支：git pull

推送标签：git push origin <tagname> (--tags推送所有分支)

删除远程标签：git push origin :refs/tags/<tagname>



.gitignore文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。

配置别名：
git config --global alias.st status
git config --global alias.co checkout
git config --global alias.ci commit
git config --global alias.br branch
git config --global alias.unstage 'reset HEAD'
git config --global alias.last 'log -1'
git config --global alias.lg "log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"









